/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include "keys_de.h"

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTZ";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  MUTE |  PP   |  Z  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |  LALT |  RALT |  H  |  J   |  K  |  L  |  Ö  |  Ä   |
            // | SHFT |  Y  |  X  |  C  |  V  |  B  |               |  N  |  M   |  ,  |  .  |  -  | ESC  |
            //                    | GUI | LWR | RSE |               | ENT | SPC  | ALT |

            bindings = <
&kp TAB    &kp Q     &kp W  &kp E     &kp R  &kp T  &kp C_MUTE  &kp C_PP  &kp DE_Z    &kp U      &kp I          &kp O          &kp P            &kp BSPC
&kp LCTRL  &kp A     &kp S  &kp D     &kp F  &kp G  &kp LALT    &mo 3     &kp H       &kp J      &kp K          &kp L          &kp DE_O_UMLAUT  &kp DE_A_UMLAUT
&kp LSHFT  &kp DE_Y  &kp X  &kp C     &kp V  &kp B                        &kp N       &kp M      &kp DE_COMMA   &kp DE_PERIOD  &kp DE_MINUS     &kp ESC
                            &kp LGUI  &mo 1  &mo 2                        &kp RETURN  &kp SPACE  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5    |  LCTRL | RCTRL |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | CTRL | BT1 | BT2 | BT3 | BT4 | BT5   |  LALT  | RALT  | LFT | DWN |  UP | RGT |     |      |
            // | SHFT | BTCR| RGB | RST | BOOT| Unlock|        |       |     |     |     |     |     |      |
            //                    | GUI |     | SPC   |        | ENT   |     | ALT |

            bindings = <
&kp TAB    &kp N1        &kp N2           &kp N3        &kp N4        &kp N5          &kp LCTRL  &kp RCTRL  &kp N6    &kp N7    &kp N8     &kp N9     &kp N0  &kp BSPC
&kp LCTRL  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LALT   &kp RALT   &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &trans  &trans
&kp LSHFT  &bt BT_CLR    &rgb_ug RGB_TOG  &sys_reset    &bootloader   &studio_unlock                        &trans    &trans    &trans     &trans     &trans  &trans
                                          &kp LGUI      &trans        &kp SPACE                             &kp LGUI  &trans    &kp SPACE
            >;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  | LCTRL | RCTRL |  &  |  [  |  ]  |  (  |  ?  | BSPC |
            // | CTRL |     |  _  |  <  |  >  |  :  |  LALT | RALT  |  '  |  (  |  )  |  ]  |  \  |  `   |
            // | SHFT |  *  |  -  |  +  |  /  |  =  |               |  "  |  {  |  }  |  }  |  |  |  ~   |
            //                    | GUI |     | SPC |               | ENT |     | ALT |

            bindings = <
&kp TAB    &kp DE_EXCLAMATION  &kp DE_AT_SIGN     &kp DE_HASH      &kp DE_DOLLAR        &kp DE_PERCENT  &kp LCTRL  &kp RCTRL  &kp DE_AMPERSAND      &kp DE_LEFT_BRACKET      &kp DE_RIGHT_BRACKET      &kp RA(NON_US_BSLH)  &kp DE_QUESTION  &kp BSPC
&kp LCTRL  &kp DE_PERIOD       &kp DE_UNDERSCORE  &kp NON_US_BSLH  &kp LS(NON_US_BSLH)  &kp DE_COLON    &kp LALT   &kp RALT   &kp DE_SINGLE_QUOTE   &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp DE_BACKSLASH     &kp DE_HASH      &kp DE_GRAVE
&kp LSHFT  &kp DE_ASTERISK     &kp DE_MINUS       &kp DE_PLUS      &kp DE_SLASH         &kp DE_EQUAL                          &kp DE_DOUBLE_QUOTES  &kp DE_LEFT_BRACE        &kp DE_RIGHT_BRACE        &kp DE_TILDE         &trans           &trans
                                                  &trans           &trans               &trans                                &trans                &trans                   &trans
            >;
        };

        extra_layer_1 {
            display-name = "EXTRA 1";
            bindings = <
&trans  &trans        &trans           &trans         &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp DE_SHARP_S   &kp DE_U_UMLAUT
&trans  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_PREV     &kp C_NEXT   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp DE_O_UMLAUT  &kp DE_A_UMLAUT
&trans  &trans        &trans           &kp PAGE_DOWN  &kp PAGE_UP  &trans                  &trans  &trans  &trans  &trans  &kp DE_EURO      &trans
                                       &trans         &trans       &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_2 {
            display-name = "EXTRA 2";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_3 {
            display-name = "EXTRA 3";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_4 {
            display-name = "EXTRA 4";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_5 {
            display-name = "EXTRA 5";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        colors {
            display-name = "EXTRA 6";
            bindings = <
&rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)
&rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)
&rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)                                                                        &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)
                                                                                                         &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)                                                                        &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)  &rgb_ug RGB_COLOR_HSB(143,100,50)
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        colors {
            if-layers = <0 1 2>;
            then-layer = <8>;
        };
    };
};
